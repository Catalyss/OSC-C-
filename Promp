Okay so I have this Idea for a propram it uses the open sound control (osc) and an Web host and is coded in C#
so let me explain how it work

I work with command lines here are the command lines :
-WebPort $port (changes the port for the web host (default :80))
-OSCPortOUT $port (changes the port for the OSC output port (default :9000))
-OSCPortIN $port (changes the port for the OSC input port (default :9001))
-HiddenFiles $path (change the path to a file containing a list of hidden words(default :none))


now lets run down how the program work in of itself :
 so when the OSC receive the address "/avatar/change" the program load a file 
 OSC.Value is what the OSC message got recieved but without the address
 so it get every file under that folder and get the file that have the same name as the OSC.Value +".json"
here is the path of said file
 System.getProperty("user.home") + "\\AppData\\LocalLow\\VRChat\\VRChat\\OSC\\"
 then here is how the Json file is writen

 {
  "id": "avtr_06ae2495-a299-4f95-b7cb-ad734e4b6534",
  "name": "｜ae｜Easter",
  "hash": -957953400,
  "parameters": [
    {
      "name": "Go/Right",
      "input": {
        "address": "/avatar/parameters/Go/Right",
        "type": "Bool"
      },
      "output": {
        "address": "/avatar/parameters/Go/Right",
        "type": "Bool"
      }
    },
 }

 then for each parameters that has an input it add either a button if the input type is bool is it is either a Float and Int is add a slider
 those button and slider get send to the the user and added only on their side of the webpage and not on the server side and those get button and slider get added to  <!-- add button and slider here --> 
when the user go into the page first they get served the template page index.html that is the basis for the modification that I said earlier 

now when a user presses a button or moves a slider that info get send to the server and is send an OSC message using the parameter address and type like this for example
var message = new SharpOSC.OscMessage("/test/1",  42.01f,);
		var sender = new SharpOSC.UDPSender("127.0.0.1", OSCportOUT);
		sender.Send(message);
  
I use Visual code to run and setup my project would you be able to write the whole code with very single function working and filled and without placeholder
I also do have the OSC .dll that is call SharpOSC.dll
and here is an example on how to listen for Messages
Example: Receiving a Message (Asynchronous)

class Program
{
	public void Main(string[] args)
	{
		// The cabllback function
		HandleOscPacket callback = delegate(OscPacket packet)
		{
			var messageReceived = (OscMessage)packet;
			Console.WriteLine("Received a message!");
		};

		var listener = new UDPListener(55555, callback);

		Console.WriteLine("Press enter to stop");
		Console.ReadLine();
		listener.Close();
	}
}

I also use 
<PackageReference Include="Microsoft.AspNetCore" Version="2.2.0" />
